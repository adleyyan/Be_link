server:
    port: 8765
    servlet:
        context-path: /

spring:
    datasource:
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://127.0.0.1:3306/hq_bms_user?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true
        username: root
        password: bms123456
#        dynamic:
#            #设置默认的数据源或者数据源组,默认值即为master
#            primary: master
#            strict: false
#            datasource:
#                master:
#                    driver-class-name: com.mysql.cj.jdbc.Driver
#                    url: jdbc:mysql://127.0.0.1:3306/test?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false
#                    username: root
#                    password: lyja
        # 数据源配置
        druid:
            # druid连接池监控
            stat-view-servlet:
                enabled: true
                url-pattern: /druid/*
                login-username: admin
                login-password: admin
                # 初始化时建立物理连接的个数
                initial-size: 5
                # 最大连接池数量
                max-active: 30
                # 最小连接池数量
                min-idle: 5
                # 获取连接时最大等待时间，单位毫秒
                max-wait: 60000
                # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
                time-between-eviction-runs-millis: 60000
                # 连接保持空闲而不被驱逐的最小时间
                min-evictable-idle-time-millis: 300000
                # 用来检测连接是否有效的sql，要求是一个查询语句
                validation-query: select count(*) from dual
                # 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
                test-while-idle: true
                # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
                test-on-borrow: false
                # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
                test-on-return: false
                # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
                pool-prepared-statements: false
                # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。
                max-pool-prepared-statement-per-connection-size: 50
                # 配置监控统计拦截的filters，去掉后监控界面sql无法统计
                filters: stat,wall
                # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
                connection-properties:
                    druid.stat.mergeSql: true
                    druid.stat.slowSqlMillis: 500
                # 合并多个DruidDataSource的监控数据
                use-global-data-source-stat: true
                filter:
                    stat:
                        log-slow-sql: true
                        slow-sql-millis: 1000
                        merge-sql: true
                    wall:
                        config:
                            multi-statement-allow: true
    autoconfigure:
        exclude: com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure
        jackson:
            date-format: yyyy-MM-dd HH:mm:ss
            time-zone: GMT+8
            serialization:
                write-dates-as-timestamps: false
    #redis集群
    redis:
        database: 0
        host: 127.0.0.1
        port: 6379
        password:
        jedis:
            pool:
                max-active: 8  # 连接池最大连接数（使用负值表示没有限制）
                min-idle: 0  # 连接池中的最小空闲连接
                max-wait: -1  # 连接池最大阻塞等待时间（使用负值表示没有限制）
                max-idle: 8  # 连接池中的最大空闲连接
        timeout: 100  #连接超时时间（毫秒

    servlet:
        multipart:
            # 开启 multipart 上传功能
            enabled: true
            # 文件写入磁盘的阈值
            file-size-threshold: 2KB
            # 最大文件大小
            max-file-size: 200MB
            # 最大请求大小
            max-request-size: 215MB
    devtools:
      restart:
          enabled: true #设置开启热部署
          additional-paths: hq_bms_user/src/main/java #重启目录
#    freemarker:
#      cache:false #页面不加载缓存，修改即时生效
    messages:
        basename: i18n.mess
    mvc:
        throw-exception-if-no-handler-found: true
    resources:
        add-mappings: false
    rabbitmq:
        host: 127.0.0.1
        port: 5672
        username: guest
        password: guest
        #virtual-host:
        publisher-confirms: true
        publisher-returns: true
        listener:
            direct:
                retry:
                    enabled: true
                    max-attempts: 3
    application:
        name: hq_bms_user
mybatis-plus:
    configuration:
        map-underscore-to-camel-case: true
        auto-mapping-behavior: full
        log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    mapper-locations: classpath*:mapper/**/*Mapper.xml
    global-config:
        # 逻辑删除配置
        db-config:
            # 删除前
            logic-not-delete-value: 1
            # 删除后
            logic-delete-value: 0
logging:
    config: classpath:logback.xml
    level:
        com.hq.bms.mapper: trace
        root: warn
# 配置了公钥和私钥的位置
rsa:
    key:
        pubKeyPath: D:\Belink\auth_key\id_key_rsa.pub
        priKeyPath: D:\Belink\auth_key\id_key_rsa
###服务注册到eureka注册中心的地址
eureka:
    client:
        service-url:
            defaultZone: http://localhost:8796/eureka
        ###因为该应用为服务提供者，是eureka的一个客户端，需要注册到注册中心
        register-with-eureka: true
        ###是否需要从eureka上检索服务
        fetch-registry: true